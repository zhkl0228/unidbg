/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_github_unidbg_arm_backend_unicorn_Unicorn */

#ifndef _Included_com_github_unidbg_arm_backend_unicorn_Unicorn
#define _Included_com_github_unidbg_arm_backend_unicorn_Unicorn
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    nativeInitialize
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_nativeInitialize
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    nativeDestroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_nativeDestroy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    hook_del
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_hook_1del
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    reg_read
 * Signature: (JII)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_reg_1read__JII
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    reg_write
 * Signature: (JI[B)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_reg_1write__JI_3B
  (JNIEnv *, jclass, jlong, jint, jbyteArray);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    reg_read
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_reg_1read__JI
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    reg_write
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_reg_1write__JIJ
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    register_emu_count_hook
 * Signature: (JJLcom/github/unidbg/arm/backend/unicorn/Unicorn/NewHook;)J
 */
JNIEXPORT jlong JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_register_1emu_1count_1hook
  (JNIEnv *, jclass, jlong, jlong, jobject);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    mem_read
 * Signature: (JJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_mem_1read
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    mem_write
 * Signature: (JJ[B)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_mem_1write
  (JNIEnv *, jclass, jlong, jlong, jbyteArray);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    mem_map
 * Signature: (JJJI)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_mem_1map
  (JNIEnv *, jclass, jlong, jlong, jlong, jint);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    mem_protect
 * Signature: (JJJI)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_mem_1protect
  (JNIEnv *, jclass, jlong, jlong, jlong, jint);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    mem_unmap
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_mem_1unmap
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    setFastDebug
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_setFastDebug
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    setSingleStep
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_setSingleStep
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    addBreakPoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_addBreakPoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    removeBreakPoint
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_removeBreakPoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    registerHook
 * Signature: (JIJJLcom/github/unidbg/arm/backend/unicorn/Unicorn/NewHook;)J
 */
JNIEXPORT jlong JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_registerHook__JIJJLcom_github_unidbg_arm_backend_unicorn_Unicorn_NewHook_2
  (JNIEnv *, jclass, jlong, jint, jlong, jlong, jobject);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    registerHook
 * Signature: (JILcom/github/unidbg/arm/backend/unicorn/Unicorn/NewHook;)J
 */
JNIEXPORT jlong JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_registerHook__JILcom_github_unidbg_arm_backend_unicorn_Unicorn_NewHook_2
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    registerDebugger
 * Signature: (JJJLcom/github/unidbg/arm/backend/unicorn/Unicorn/NewHook;)J
 */
JNIEXPORT jlong JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_registerDebugger
  (JNIEnv *, jclass, jlong, jlong, jlong, jobject);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    emu_start
 * Signature: (JJJJJ)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_emu_1start
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    emu_stop
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_emu_1stop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    context_alloc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_context_1alloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    context_save
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_context_1save
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    context_restore
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_context_1restore
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    testSampleArm
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_testSampleArm
  (JNIEnv *, jclass);

/*
 * Class:     com_github_unidbg_arm_backend_unicorn_Unicorn
 * Method:    testSampleArm64
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_github_unidbg_arm_backend_unicorn_Unicorn_testSampleArm64
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
